# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-12-02 22:27


from django.contrib.admin.utils import NestedObjects
from django.db import migrations
from django.db.models import Count


def remove_dupes(apps, schema_editor):
    Person = apps.get_model("people", "Person")
    Leaflet = apps.get_model("leaflets", "Leaflet")
    qs = (
        Person.objects.values("remote_id")
        .annotate(count=Count("remote_id"))
        .filter(count__gt=1)
    )
    for person_dict in qs:
        print(person_dict)
        models = Person.objects.filter(remote_id=person_dict["remote_id"])
        keep_person = models[0]
        dupes = models[1:]
        for person in dupes:
            person.leaflet_set.update(publisher_person=keep_person)
            collector = NestedObjects(using="default")
            collector.collect([person])
            collected = collector.nested()
            assert len(collected) < 2 or not any(
                [isinstance(x, Leaflet) for x in collected[1]]
            )
            person.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("people", "0001_initial"),
    ]

    operations = [migrations.RunPython(remove_dupes, migrations.RunPython.noop)]
